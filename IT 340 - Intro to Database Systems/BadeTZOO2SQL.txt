Question 1

SELECT EMP_ID, RES_BONUS
FROM RESEARCHER
WHERE RES_BONUS IS NOT NULL;

Question 2

SELECT SUM(PAY_AMOUNT)
FROM PAYMENT
WHERE PAY_TYPE = 'Check';

Question 3

SELECT ANIM_NAME
FROM ANIMAL
WHERE ANIM_ACQUIRED_FROM = 'Philadelphia Zoo';

Question 4

SELECT DISTINCT ANIM_NAME
FROM ANIMAL
WHERE ANIM_NAME LIKE 'J%';

Question 5

SELECT DISTINCT FOOD_ITEM_DESCRIPTION
FROM FOOD_ITEM
WHERE FOOD_ITEM_DESCRIPTION NOT LIKE '%Nutritious%';

Question 6

SELECT S.STORE_ID, S.STORE_PHONE_NUMBER
FROM STORE S
JOIN TRANSACTION T ON S.STORE_ID = T.STORE_ID
GROUP BY S.STORE_ID, S.STORE_PHONE_NUMBER
HAVING SUM(T.TRANS_TOTAL_AMT) BETWEEN 50 AND 100;

Question 7

SELECT SUM(TRANS_TOTAL_AMT) AS TOTALSEPTSALES
FROM TRANSACTION
WHERE TRANS_DATE LIKE '%SEP%';

Question 8

SELECT EMP_FIRST_NAME, EMP_LAST_NAME
FROM EMPLOYEE
WHERE EMP_SALARY > (SELECT AVG(EMP_SALARY) FROM EMPLOYEE);

Question 9

SELECT MAX(RES_BONUS)
FROM RESEARCHER;

Question 10

SELECT MAX(PAY_AMOUNT) - MIN(PAY_AMOUNT) AS PAY_RANGE
FROM PAYMENT P
LEFT JOIN CORPORATE_SPONSOR_PAYMENT CSP ON CSP.PAY_ID = P.PAY_ID;

Question 11

SELECT SUM(PAY_AMOUNT)
FROM PAYMENT
WHERE PAY_CREDIT_CARD_TYPE = 'MasterCard';

Question 12

SELECT FS.FOOD_SUP_COMPANY_NAME, MFIS.MAX_PRICE
FROM FOOD_SUPPLIER FS
INNER JOIN (
      SELECT FOOD_SUP_ID, MAX(FOOD_PRICE) AS MAX_PRICE
      FROM FOOD_ITEM_SUPPLIER
      GROUP BY FOOD_SUP_ID
) MFIS ON FS.FOOD_SUP_ID = MFIS.FOOD_SUP_ID
ORDER BY FS.FOOD_SUP_COMPANY_NAME;

Question 13

SELECT FS.FOOD_SUP_ID, FS.FOOD_SUP_COMPANY_NAME, SUM(FIS.FOOD_PRICE)
FROM FOOD_SUPPLIER FS
INNER JOIN FOOD_ITEM_SUPPLIER FIS ON FS.FOOD_SUP_ID = FIS.FOOD_SUP_ID
GROUP BY FS.FOOD_SUP_ID, FS.FOOD_SUP_COMPANY_NAME;

Question 14

SELECT DEPT_ID, MAX(EMP_SALARY)
FROM DEPARTMENT JOIN EMPLOYEE USING (DEPT_ID)
GROUP BY DEPT_ID;

Question 15

SELECT ANIM_LIVING_ENVIRONMENT_ID, COUNT(ANIM_ID)
FROM ANIMAL
GROUP BY ANIM_LIVING_ENVIRONMENT_ID;

Question 16

SELECT EMP_CITY, SUM(EMP_SALARY)
FROM EMPLOYEE
GROUP BY EMP_CITY;

Question 17

SELECT OFFICE_BUILDING, COUNT(OFFICE_ID)
FROM OFFICE
GROUP BY OFFICE_BUILDING;

Question 18

SELECT ANIM_BREED_NAME, AVG(ANIM_HEIGHT_ON_ARRIVAL)
FROM ANIMAL JOIN ANIMAL_BREED
USING (ANIM_BREED_ID)
GROUP BY ANIM_BREED_NAME;

Question 19

SELECT DEPT_ID, MAX(EMP_SALARY)
FROM DEPARTMENT JOIN EMPLOYEE
USING (DEPT_ID)
GROUP BY DEPT_ID
HAVING MAX(EMP_SALARY) > 55000;

Question 20

SELECT DISTINCT FOOD_SUP_COMPANY_NAME
FROM FOOD_SUPPLIER JOIN FOOD_ITEM_SUPPLIER
USING (FOOD_SUP_ID)
WHERE FOOD_ITEM_ID = 112 OR FOOD_ITEM_ID = 22;

Question 21

SELECT ANIM_NAME
FROM ANIMAL JOIN ANIMAL_LIVING_ENVIRONMENT
USING (ANIM_LIVING_ENVIRONMENT_ID)
WHERE ANIM_LIVING_ENVIRONMENT_TYPE = 'Desert' AND ANIM_ARRIVAL_DATE BETWEEN '01-FEB-2000' AND '01-FEB-2005';

Question 22

SELECT DEPT_ID, DEPT_NAME, OFFICE_ID, OFFICE_BUILDING, EMP_FIRST_NAME, EMP_LAST_NAME
FROM EMPLOYEE JOIN DEPARTMENT USING (DEPT_ID) JOIN OFFICE USING (OFFICE_ID)
WHERE EMP_ID = 4703;

Question 23

SELECT FOOD_ITEM_DESCRIPTION, FOOD_QOH, FOOD_SUP_COMPANY_NAME
FROM FOOD_ITEM JOIN FOOD_ITEM_SUPPLIER USING (FOOD_ITEM_ID) JOIN FOOD_SUPPLIER USING (FOOD_SUP_ID)
WHERE FOOD_QOH < 10;

Question 24

SELECT ANIM_NAME, ANIM_CHECKUP_DATE
FROM ANIMAL JOIN ANIMAL_CHECKUP USING (ANIM_ID) JOIN ANIMAL_BREED USING (ANIM_BREED_ID)
WHERE ANIM_BREED_NAME = 'Zebra'
ORDER BY ANIM_NAME;

Question 25

SELECT EMP_ID, EMP_FIRST_NAME, EMP_LAST_NAME, DEPT_NAME, OFFICE_PHONE_NUMBER
      ZOO_ADDRESS, ZOO_CITY, RTRIM(ZOO_STATE || ' ' || ZOO_ZIP_CODE)
FROM EMPLOYEE JOIN DEPARTMENT USING (ZOO_ID) JOIN OFFICE USING (OFFICE_ID)
      JOIN ZOO USING (ZOO_ID)
WHERE OFFICE_BUILDING = 'Aquatic Research';

Question 26

SELECT VOL_FIRST_NAME, VOL_LAST_NAME, VOL_PHONE_NUMBER, VOL_AVAILABILITY
FROM VOLUNTEER JOIN VOLUNTEER_DEPT_HISTORY USING (VOL_ID) JOIN DEPARTMENT USING (DEPT_ID)
      JOIN ZOO USING (ZOO_ID)
WHERE ZOO_NAME = 'Minnesota Zoo';

Question 27

SELECT DISTINCT EMP_FIRST_NAME, DEPT_NAME, ZOO_NAME
FROM EMPLOYEE JOIN KEEPER USING (EMP_ID) JOIN DEPARTMENT USING (ZOO_ID) JOIN ZOO USING (ZOO_ID)
    JOIN OFFICE USING (OFFICE_ID)
WHERE KEEP_CERTIFIED = 'YES' AND DEPT_ID IS NOT NULL AND ZOO_ID IS NOT NULL AND OFFICE_ID IS NOT NULL;

Question 28

SELECT PRODUCT_ID, PRODUCT_NAME, PRODUCT_SUGGESTED_PRICE
FROM PRODUCT
WHERE PRODUCT_SUGGESTED_PRICE > (SELECT AVG(PRODUCT_SUGGESTED_PRICE) FROM PRODUCT);

Question 29

SELECT ANIM_NAME, ANIM_ID
FROM ANIMAL JOIN ANIMAL_BREED USING (ANIM_BREED_ID)
WHERE ANIM_BREED_NAME = 'Straw-colored Fruit Bat' AND ANIM_BIRTH_DATE LIKE '%08%';

Question 30

SELECT (PRODUCT_FINISH_DATE - PRODUCT_START_DATE) AS DAYS
FROM MANUFACTURED_PRODUCT JOIN PRODUCT USING (PRODUCT_ID)
WHERE PRODUCT_NAME = 'Zoo Water bottle';