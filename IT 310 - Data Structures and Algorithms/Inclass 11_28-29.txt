1) Each sort for list [10,9,8,7,6,5,4,3,2,1]

Bubble sort
First Pass: Swap 10 all the way to end [9,8,7,6,5,4,3,2,1,10]
second pass: Swap 9 up to 10 [8,7,6,5,4,3,2,1,9,10]
third pass: Swap 8 up to 9 
4th - 9th pass, swapping in order, 7,6,5,4,3,2 to until a larger number is behind it
End [1,2,3,4,5,6,7,8,9,10] in 9 passes

Selection sort:

first Pass: Determines 10 is largest, places at end [9,8,7,6,5,4,3,2,1,10]
second pass: determines 9 is next largest, places before 10 [8,7,6,5,4,3,2,1,9,10]
repeats until no numbers need to be moved:
Final result [1,2,3,4,5,6,7,8,9,10] in 9 passes

Insertion sort:

First item is default value: 10
Next item, 9, is placed in front of 10
next item 8 is place in front of 9
repeats until 1 is placed in front of 2
Result: [1,2,3,4,5,6,7,8,9,10] in 9 insertions in front of default value (9 passes)

Merge sort:

Splits list in half [10,9,8,7,6] [5,4,3,2,1]
continues to split lists in half until only one value remains in each list
[10][9][8][7][6][5][4][3][2][1]
sorts each sublist of 2
[9,10][7,8][5,6][3,4][1,2]
continues to merge lists until the list is sorted
Result [1,2,3,4,5,6,7,8,9,10] in 9 merges

Quicksort:

10 = pivot value
switches 10 and 1
switches 9 and 2
switches 8 and 3
switches 7 and 4
switches 6 and 5
reiterates through the list to ensure it is sorted.

2) Sort for each list [P,Y,T,H,O,N]

Bubble:

Does nothing with P, Y switches with each other item till end [P,T,H,O,N,Y]
Does nothing with P, switches T until it reaches Y [P,H,O,N,T,Y]
Switches P until it reaches T [H,O,N,P,T,Y]
Does nothing with H, Switches O and N [H,N,O,P,T,Y]
Iterates through again to ensure none out of place
List done in minimum 5 iterations

Selection sort:

Finds Y is largest, puts at end [P,T,H,O,N,Y]
Finds T is largest, puts before Y [P,H,O,N,T,Y]
Finds P is largest, Puts before T [H,O,N,P,T,Y]
Finds O is largest, puts before P [H,N,O,P,T,Y]
Reiterates through to find that list is sorted in 2 more passes
List sorted in 6 passes

Insertion sort

Initial sorted list = P
Sort finds Y goes after P [P,Y,T,H,O,N]
Sort finds T goes after P, before Y [P,T,Y,H,O,N]
Sort finds H goes before P [H,P,T,Y,O,N]
Sort finds O goes before P, after H [H,O,P,T,Y,N]
Sort finds N goes before o, after H [H,N,O,P,T,Y]
List sorted in 5 iterations

MergeSort

List split into 6 different lists [P][Y][T][H][O][N]
List P and Y sorted and combined, List O and N sorted and combined, List T and H sorted and combined [P,Y] [H,T] [N,O]
List [P,Y] and [H,T] sorted and combined [H,P,T,Y][N,O]
Last two lists merged [H,N,O,P,T,Y]
List sorted in 5 splits and 5 merges

QuickSort

Left at P, right at N
Switches P/N
Switches Y/O
Switches T/H
List = N,O,H,T,Y,P, split between H/T
List N,O,H left at N, right at H
Switches H/N
switches O/N
List H,N,O sorted
List T,Y,P Left at T, right at P
Switch T/P
Switch Y/T
List P,T,Y sorted
Lists combined into list [H,N,O,P,T,Y]
List sorted in 1 full and 2 half iterations.